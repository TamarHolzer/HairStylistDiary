//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyProject3.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference1.Adress))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference1.Cities))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference1.CustomerDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference1.Sale))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference1.Hairdo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference1.Orders))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference1.Customers))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adress", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Adress : MyProject3.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyProject3.ServiceReference1.Cities CodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeAdress {
            get {
                return this.CodeAdressField;
            }
            set {
                if ((this.CodeAdressField.Equals(value) != true)) {
                    this.CodeAdressField = value;
                    this.RaisePropertyChanged("CodeAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyProject3.ServiceReference1.Cities CodeCity {
            get {
                return this.CodeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeCityField, value) != true)) {
                    this.CodeCityField = value;
                    this.RaisePropertyChanged("CodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cities", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Cities : MyProject3.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameCityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeCity {
            get {
                return this.CodeCityField;
            }
            set {
                if ((this.CodeCityField.Equals(value) != true)) {
                    this.CodeCityField = value;
                    this.RaisePropertyChanged("CodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameCity {
            get {
                return this.NameCityField;
            }
            set {
                if ((object.ReferenceEquals(this.NameCityField, value) != true)) {
                    this.NameCityField = value;
                    this.RaisePropertyChanged("NameCity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDetails", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class CustomerDetails : MyProject3.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeCustomerDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Mail1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPhone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NPhone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameCField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeCustomerDetails {
            get {
                return this.CodeCustomerDetailsField;
            }
            set {
                if ((this.CodeCustomerDetailsField.Equals(value) != true)) {
                    this.CodeCustomerDetailsField = value;
                    this.RaisePropertyChanged("CodeCustomerDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail1 {
            get {
                return this.Mail1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Mail1Field, value) != true)) {
                    this.Mail1Field = value;
                    this.RaisePropertyChanged("Mail1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPhone1 {
            get {
                return this.NPhone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.NPhone1Field, value) != true)) {
                    this.NPhone1Field = value;
                    this.RaisePropertyChanged("NPhone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NPhone2 {
            get {
                return this.NPhone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.NPhone2Field, value) != true)) {
                    this.NPhone2Field = value;
                    this.RaisePropertyChanged("NPhone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameC {
            get {
                return this.NameCField;
            }
            set {
                if ((object.ReferenceEquals(this.NameCField, value) != true)) {
                    this.NameCField = value;
                    this.RaisePropertyChanged("NameC");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sale", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Sale : MyProject3.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TheSaleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeSale {
            get {
                return this.CodeSaleField;
            }
            set {
                if ((this.CodeSaleField.Equals(value) != true)) {
                    this.CodeSaleField = value;
                    this.RaisePropertyChanged("CodeSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSale {
            get {
                return this.NameSaleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSaleField, value) != true)) {
                    this.NameSaleField = value;
                    this.RaisePropertyChanged("NameSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TheSale {
            get {
                return this.TheSaleField;
            }
            set {
                if ((this.TheSaleField.Equals(value) != true)) {
                    this.TheSaleField = value;
                    this.RaisePropertyChanged("TheSale");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hairdo", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Hairdo : MyProject3.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeHairdoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionHairdoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeHairdo {
            get {
                return this.CodeHairdoField;
            }
            set {
                if ((this.CodeHairdoField.Equals(value) != true)) {
                    this.CodeHairdoField = value;
                    this.RaisePropertyChanged("CodeHairdo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionHairdo {
            get {
                return this.DescriptionHairdoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionHairdoField, value) != true)) {
                    this.DescriptionHairdoField = value;
                    this.RaisePropertyChanged("DescriptionHairdo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orders", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Orders : MyProject3.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyProject3.ServiceReference1.Customers CodeCustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyProject3.ServiceReference1.Hairdo CodeHairdoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyProject3.ServiceReference1.Customers CodeCustomers {
            get {
                return this.CodeCustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeCustomersField, value) != true)) {
                    this.CodeCustomersField = value;
                    this.RaisePropertyChanged("CodeCustomers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyProject3.ServiceReference1.Hairdo CodeHairdo {
            get {
                return this.CodeHairdoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeHairdoField, value) != true)) {
                    this.CodeHairdoField = value;
                    this.RaisePropertyChanged("CodeHairdo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeOrder {
            get {
                return this.CodeOrderField;
            }
            set {
                if ((this.CodeOrderField.Equals(value) != true)) {
                    this.CodeOrderField = value;
                    this.RaisePropertyChanged("CodeOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customers", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Customers : MyProject3.ServiceReference1.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyProject3.ServiceReference1.Adress CodeAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyProject3.ServiceReference1.CustomerDetails CodeCustomerDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeCustomersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyProject3.ServiceReference1.Sale CodeSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FinalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Hour1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HowLongField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMyClinicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WayofPayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyProject3.ServiceReference1.Adress CodeAdress {
            get {
                return this.CodeAdressField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeAdressField, value) != true)) {
                    this.CodeAdressField = value;
                    this.RaisePropertyChanged("CodeAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyProject3.ServiceReference1.CustomerDetails CodeCustomerDetails {
            get {
                return this.CodeCustomerDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeCustomerDetailsField, value) != true)) {
                    this.CodeCustomerDetailsField = value;
                    this.RaisePropertyChanged("CodeCustomerDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeCustomers {
            get {
                return this.CodeCustomersField;
            }
            set {
                if ((this.CodeCustomersField.Equals(value) != true)) {
                    this.CodeCustomersField = value;
                    this.RaisePropertyChanged("CodeCustomers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyProject3.ServiceReference1.Sale CodeSale {
            get {
                return this.CodeSaleField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeSaleField, value) != true)) {
                    this.CodeSaleField = value;
                    this.RaisePropertyChanged("CodeSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateT {
            get {
                return this.DateTField;
            }
            set {
                if ((this.DateTField.Equals(value) != true)) {
                    this.DateTField = value;
                    this.RaisePropertyChanged("DateT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FinalPrice {
            get {
                return this.FinalPriceField;
            }
            set {
                if ((this.FinalPriceField.Equals(value) != true)) {
                    this.FinalPriceField = value;
                    this.RaisePropertyChanged("FinalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hour1 {
            get {
                return this.Hour1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Hour1Field, value) != true)) {
                    this.Hour1Field = value;
                    this.RaisePropertyChanged("Hour1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HowLong {
            get {
                return this.HowLongField;
            }
            set {
                if ((object.ReferenceEquals(this.HowLongField, value) != true)) {
                    this.HowLongField = value;
                    this.RaisePropertyChanged("HowLong");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMyClinic {
            get {
                return this.IsMyClinicField;
            }
            set {
                if ((this.IsMyClinicField.Equals(value) != true)) {
                    this.IsMyClinicField = value;
                    this.RaisePropertyChanged("IsMyClinic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemarksC {
            get {
                return this.RemarksCField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksCField, value) != true)) {
                    this.RemarksCField = value;
                    this.RaisePropertyChanged("RemarksC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WayofPay {
            get {
                return this.WayofPayField;
            }
            set {
                if ((object.ReferenceEquals(this.WayofPayField, value) != true)) {
                    this.WayofPayField = value;
                    this.RaisePropertyChanged("WayofPay");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateOrdersAndCustomer", ReplyAction="http://tempuri.org/IService1/updateOrdersAndCustomerResponse")]
        int updateOrdersAndCustomer(int code, MyProject3.ServiceReference1.Customers c, int codeSale1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateOrdersAndCustomer", ReplyAction="http://tempuri.org/IService1/updateOrdersAndCustomerResponse")]
        System.Threading.Tasks.Task<int> updateOrdersAndCustomerAsync(int code, MyProject3.ServiceReference1.Customers c, int codeSale1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSaleByCode", ReplyAction="http://tempuri.org/IService1/getSaleByCodeResponse")]
        MyProject3.ServiceReference1.Sale getSaleByCode(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSaleByCode", ReplyAction="http://tempuri.org/IService1/getSaleByCodeResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Sale> getSaleByCodeAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllCities", ReplyAction="http://tempuri.org/IService1/getAllCitiesResponse")]
        MyProject3.ServiceReference1.Cities[] getAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllCities", ReplyAction="http://tempuri.org/IService1/getAllCitiesResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Cities[]> getAllCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAdressByCode", ReplyAction="http://tempuri.org/IService1/GetAdressByCodeResponse")]
        MyProject3.ServiceReference1.Adress GetAdressByCode(int v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAdressByCode", ReplyAction="http://tempuri.org/IService1/GetAdressByCodeResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Adress> GetAdressByCodeAsync(int v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToHairdo", ReplyAction="http://tempuri.org/IService1/GetCodeToHairdoResponse")]
        int GetCodeToHairdo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToHairdo", ReplyAction="http://tempuri.org/IService1/GetCodeToHairdoResponse")]
        System.Threading.Tasks.Task<int> GetCodeToHairdoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomers", ReplyAction="http://tempuri.org/IService1/GetAllCustomersResponse")]
        MyProject3.ServiceReference1.Customers[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomers", ReplyAction="http://tempuri.org/IService1/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Customers[]> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddHairdo", ReplyAction="http://tempuri.org/IService1/AddHairdoResponse")]
        int AddHairdo(MyProject3.ServiceReference1.Hairdo hairdo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddHairdo", ReplyAction="http://tempuri.org/IService1/AddHairdoResponse")]
        System.Threading.Tasks.Task<int> AddHairdoAsync(MyProject3.ServiceReference1.Hairdo hairdo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllHairdos", ReplyAction="http://tempuri.org/IService1/GetAllHairdosResponse")]
        MyProject3.ServiceReference1.Hairdo[] GetAllHairdos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllHairdos", ReplyAction="http://tempuri.org/IService1/GetAllHairdosResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Hairdo[]> GetAllHairdosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomerDetails", ReplyAction="http://tempuri.org/IService1/GetAllCustomerDetailsResponse")]
        MyProject3.ServiceReference1.CustomerDetails[] GetAllCustomerDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomerDetails", ReplyAction="http://tempuri.org/IService1/GetAllCustomerDetailsResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.CustomerDetails[]> GetAllCustomerDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSales", ReplyAction="http://tempuri.org/IService1/GetAllSalesResponse")]
        MyProject3.ServiceReference1.Sale[] GetAllSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSales", ReplyAction="http://tempuri.org/IService1/GetAllSalesResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Sale[]> GetAllSalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAdresssByName", ReplyAction="http://tempuri.org/IService1/GetAdresssByNameResponse")]
        MyProject3.ServiceReference1.Adress GetAdresssByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAdresssByName", ReplyAction="http://tempuri.org/IService1/GetAdresssByNameResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Adress> GetAdresssByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeCityByName", ReplyAction="http://tempuri.org/IService1/GetCodeCityByNameResponse")]
        MyProject3.ServiceReference1.Cities GetCodeCityByName(string c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeCityByName", ReplyAction="http://tempuri.org/IService1/GetCodeCityByNameResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Cities> GetCodeCityByNameAsync(string c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOrder", ReplyAction="http://tempuri.org/IService1/UpdateOrderResponse")]
        int UpdateOrder(MyProject3.ServiceReference1.Customers customers, int codeSale1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateOrder", ReplyAction="http://tempuri.org/IService1/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(MyProject3.ServiceReference1.Customers customers, int codeSale1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAdress", ReplyAction="http://tempuri.org/IService1/AddAdressResponse")]
        int AddAdress(MyProject3.ServiceReference1.Adress adress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAdress", ReplyAction="http://tempuri.org/IService1/AddAdressResponse")]
        System.Threading.Tasks.Task<int> AddAdressAsync(MyProject3.ServiceReference1.Adress adress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToAdress", ReplyAction="http://tempuri.org/IService1/GetCodeToAdressResponse")]
        int GetCodeToAdress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToAdress", ReplyAction="http://tempuri.org/IService1/GetCodeToAdressResponse")]
        System.Threading.Tasks.Task<int> GetCodeToAdressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllOrders", ReplyAction="http://tempuri.org/IService1/GetAllOrdersResponse")]
        MyProject3.ServiceReference1.Orders[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllOrders", ReplyAction="http://tempuri.org/IService1/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeCustomerDetailsByName", ReplyAction="http://tempuri.org/IService1/GetCodeCustomerDetailsByNameResponse")]
        MyProject3.ServiceReference1.CustomerDetails GetCodeCustomerDetailsByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeCustomerDetailsByName", ReplyAction="http://tempuri.org/IService1/GetCodeCustomerDetailsByNameResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.CustomerDetails> GetCodeCustomerDetailsByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToCustomers", ReplyAction="http://tempuri.org/IService1/GetCodeToCustomersResponse")]
        int GetCodeToCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToCustomers", ReplyAction="http://tempuri.org/IService1/GetCodeToCustomersResponse")]
        System.Threading.Tasks.Task<int> GetCodeToCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCustomers", ReplyAction="http://tempuri.org/IService1/AddCustomersResponse")]
        int AddCustomers(MyProject3.ServiceReference1.Customers customers, int codeSale1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCustomers", ReplyAction="http://tempuri.org/IService1/AddCustomersResponse")]
        System.Threading.Tasks.Task<int> AddCustomersAsync(MyProject3.ServiceReference1.Customers customers, int codeSale1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAddresses", ReplyAction="http://tempuri.org/IService1/GetAllAddressesResponse")]
        MyProject3.ServiceReference1.Adress[] GetAllAddresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAddresses", ReplyAction="http://tempuri.org/IService1/GetAllAddressesResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Adress[]> GetAllAddressesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderByCodeCustomer", ReplyAction="http://tempuri.org/IService1/GetOrderByCodeCustomerResponse")]
        MyProject3.ServiceReference1.Orders[] GetOrderByCodeCustomer(int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderByCodeCustomer", ReplyAction="http://tempuri.org/IService1/GetOrderByCodeCustomerResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders[]> GetOrderByCodeCustomerAsync(int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToCities", ReplyAction="http://tempuri.org/IService1/GetCodeToCitiesResponse")]
        int GetCodeToCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToCities", ReplyAction="http://tempuri.org/IService1/GetCodeToCitiesResponse")]
        System.Threading.Tasks.Task<int> GetCodeToCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCity", ReplyAction="http://tempuri.org/IService1/AddCityResponse")]
        int AddCity(MyProject3.ServiceReference1.Cities cities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCity", ReplyAction="http://tempuri.org/IService1/AddCityResponse")]
        System.Threading.Tasks.Task<int> AddCityAsync(MyProject3.ServiceReference1.Cities cities);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCustomersWithAllDetails", ReplyAction="http://tempuri.org/IService1/deleteCustomersWithAllDetailsResponse")]
        int deleteCustomersWithAllDetails(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCustomersWithAllDetails", ReplyAction="http://tempuri.org/IService1/deleteCustomersWithAllDetailsResponse")]
        System.Threading.Tasks.Task<int> deleteCustomersWithAllDetailsAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCustomerDetailsByCode", ReplyAction="http://tempuri.org/IService1/getCustomerDetailsByCodeResponse")]
        MyProject3.ServiceReference1.Customers getCustomerDetailsByCode(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCustomerDetailsByCode", ReplyAction="http://tempuri.org/IService1/getCustomerDetailsByCodeResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Customers> getCustomerDetailsByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOrderByCode", ReplyAction="http://tempuri.org/IService1/getOrderByCodeResponse")]
        MyProject3.ServiceReference1.Orders getOrderByCode(int v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getOrderByCode", ReplyAction="http://tempuri.org/IService1/getOrderByCodeResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders> getOrderByCodeAsync(int v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCust", ReplyAction="http://tempuri.org/IService1/AddCustResponse")]
        int AddCust(MyProject3.ServiceReference1.CustomerDetails c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCust", ReplyAction="http://tempuri.org/IService1/AddCustResponse")]
        System.Threading.Tasks.Task<int> AddCustAsync(MyProject3.ServiceReference1.CustomerDetails c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToCustomersD", ReplyAction="http://tempuri.org/IService1/GetCodeToCustomersDResponse")]
        int GetCodeToCustomersD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToCustomersD", ReplyAction="http://tempuri.org/IService1/GetCodeToCustomersDResponse")]
        System.Threading.Tasks.Task<int> GetCodeToCustomersDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsExist", ReplyAction="http://tempuri.org/IService1/IsExistResponse")]
        int IsExist(string n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsExist", ReplyAction="http://tempuri.org/IService1/IsExistResponse")]
        System.Threading.Tasks.Task<int> IsExistAsync(string n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomersByCustName", ReplyAction="http://tempuri.org/IService1/GetAllCustomersByCustNameResponse")]
        MyProject3.ServiceReference1.Customers[] GetAllCustomersByCustName(string n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCustomersByCustName", ReplyAction="http://tempuri.org/IService1/GetAllCustomersByCustNameResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Customers[]> GetAllCustomersByCustNameAsync(string n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderListByCustomer", ReplyAction="http://tempuri.org/IService1/GetOrderListByCustomerResponse")]
        MyProject3.ServiceReference1.Orders[] GetOrderListByCustomer(int cd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOrderListByCustomer", ReplyAction="http://tempuri.org/IService1/GetOrderListByCustomerResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders[]> GetOrderListByCustomerAsync(int cd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        int AddOrder(MyProject3.ServiceReference1.Orders order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddOrder", ReplyAction="http://tempuri.org/IService1/AddOrderResponse")]
        System.Threading.Tasks.Task<int> AddOrderAsync(MyProject3.ServiceReference1.Orders order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToOrder", ReplyAction="http://tempuri.org/IService1/GetCodeToOrderResponse")]
        int GetCodeToOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCodeToOrder", ReplyAction="http://tempuri.org/IService1/GetCodeToOrderResponse")]
        System.Threading.Tasks.Task<int> GetCodeToOrderAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MyProject3.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MyProject3.ServiceReference1.IService1>, MyProject3.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int updateOrdersAndCustomer(int code, MyProject3.ServiceReference1.Customers c, int codeSale1) {
            return base.Channel.updateOrdersAndCustomer(code, c, codeSale1);
        }
        
        public System.Threading.Tasks.Task<int> updateOrdersAndCustomerAsync(int code, MyProject3.ServiceReference1.Customers c, int codeSale1) {
            return base.Channel.updateOrdersAndCustomerAsync(code, c, codeSale1);
        }
        
        public MyProject3.ServiceReference1.Sale getSaleByCode(int value) {
            return base.Channel.getSaleByCode(value);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Sale> getSaleByCodeAsync(int value) {
            return base.Channel.getSaleByCodeAsync(value);
        }
        
        public MyProject3.ServiceReference1.Cities[] getAllCities() {
            return base.Channel.getAllCities();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Cities[]> getAllCitiesAsync() {
            return base.Channel.getAllCitiesAsync();
        }
        
        public MyProject3.ServiceReference1.Adress GetAdressByCode(int v) {
            return base.Channel.GetAdressByCode(v);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Adress> GetAdressByCodeAsync(int v) {
            return base.Channel.GetAdressByCodeAsync(v);
        }
        
        public int GetCodeToHairdo() {
            return base.Channel.GetCodeToHairdo();
        }
        
        public System.Threading.Tasks.Task<int> GetCodeToHairdoAsync() {
            return base.Channel.GetCodeToHairdoAsync();
        }
        
        public MyProject3.ServiceReference1.Customers[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Customers[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public int AddHairdo(MyProject3.ServiceReference1.Hairdo hairdo) {
            return base.Channel.AddHairdo(hairdo);
        }
        
        public System.Threading.Tasks.Task<int> AddHairdoAsync(MyProject3.ServiceReference1.Hairdo hairdo) {
            return base.Channel.AddHairdoAsync(hairdo);
        }
        
        public MyProject3.ServiceReference1.Hairdo[] GetAllHairdos() {
            return base.Channel.GetAllHairdos();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Hairdo[]> GetAllHairdosAsync() {
            return base.Channel.GetAllHairdosAsync();
        }
        
        public MyProject3.ServiceReference1.CustomerDetails[] GetAllCustomerDetails() {
            return base.Channel.GetAllCustomerDetails();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.CustomerDetails[]> GetAllCustomerDetailsAsync() {
            return base.Channel.GetAllCustomerDetailsAsync();
        }
        
        public MyProject3.ServiceReference1.Sale[] GetAllSales() {
            return base.Channel.GetAllSales();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Sale[]> GetAllSalesAsync() {
            return base.Channel.GetAllSalesAsync();
        }
        
        public MyProject3.ServiceReference1.Adress GetAdresssByName(string name) {
            return base.Channel.GetAdresssByName(name);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Adress> GetAdresssByNameAsync(string name) {
            return base.Channel.GetAdresssByNameAsync(name);
        }
        
        public MyProject3.ServiceReference1.Cities GetCodeCityByName(string c) {
            return base.Channel.GetCodeCityByName(c);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Cities> GetCodeCityByNameAsync(string c) {
            return base.Channel.GetCodeCityByNameAsync(c);
        }
        
        public int UpdateOrder(MyProject3.ServiceReference1.Customers customers, int codeSale1) {
            return base.Channel.UpdateOrder(customers, codeSale1);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(MyProject3.ServiceReference1.Customers customers, int codeSale1) {
            return base.Channel.UpdateOrderAsync(customers, codeSale1);
        }
        
        public int AddAdress(MyProject3.ServiceReference1.Adress adress) {
            return base.Channel.AddAdress(adress);
        }
        
        public System.Threading.Tasks.Task<int> AddAdressAsync(MyProject3.ServiceReference1.Adress adress) {
            return base.Channel.AddAdressAsync(adress);
        }
        
        public int GetCodeToAdress() {
            return base.Channel.GetCodeToAdress();
        }
        
        public System.Threading.Tasks.Task<int> GetCodeToAdressAsync() {
            return base.Channel.GetCodeToAdressAsync();
        }
        
        public MyProject3.ServiceReference1.Orders[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public MyProject3.ServiceReference1.CustomerDetails GetCodeCustomerDetailsByName(string name) {
            return base.Channel.GetCodeCustomerDetailsByName(name);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.CustomerDetails> GetCodeCustomerDetailsByNameAsync(string name) {
            return base.Channel.GetCodeCustomerDetailsByNameAsync(name);
        }
        
        public int GetCodeToCustomers() {
            return base.Channel.GetCodeToCustomers();
        }
        
        public System.Threading.Tasks.Task<int> GetCodeToCustomersAsync() {
            return base.Channel.GetCodeToCustomersAsync();
        }
        
        public int AddCustomers(MyProject3.ServiceReference1.Customers customers, int codeSale1) {
            return base.Channel.AddCustomers(customers, codeSale1);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomersAsync(MyProject3.ServiceReference1.Customers customers, int codeSale1) {
            return base.Channel.AddCustomersAsync(customers, codeSale1);
        }
        
        public MyProject3.ServiceReference1.Adress[] GetAllAddresses() {
            return base.Channel.GetAllAddresses();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Adress[]> GetAllAddressesAsync() {
            return base.Channel.GetAllAddressesAsync();
        }
        
        public MyProject3.ServiceReference1.Orders[] GetOrderByCodeCustomer(int c) {
            return base.Channel.GetOrderByCodeCustomer(c);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders[]> GetOrderByCodeCustomerAsync(int c) {
            return base.Channel.GetOrderByCodeCustomerAsync(c);
        }
        
        public int GetCodeToCities() {
            return base.Channel.GetCodeToCities();
        }
        
        public System.Threading.Tasks.Task<int> GetCodeToCitiesAsync() {
            return base.Channel.GetCodeToCitiesAsync();
        }
        
        public int AddCity(MyProject3.ServiceReference1.Cities cities) {
            return base.Channel.AddCity(cities);
        }
        
        public System.Threading.Tasks.Task<int> AddCityAsync(MyProject3.ServiceReference1.Cities cities) {
            return base.Channel.AddCityAsync(cities);
        }
        
        public int deleteCustomersWithAllDetails(int code) {
            return base.Channel.deleteCustomersWithAllDetails(code);
        }
        
        public System.Threading.Tasks.Task<int> deleteCustomersWithAllDetailsAsync(int code) {
            return base.Channel.deleteCustomersWithAllDetailsAsync(code);
        }
        
        public MyProject3.ServiceReference1.Customers getCustomerDetailsByCode(int code) {
            return base.Channel.getCustomerDetailsByCode(code);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Customers> getCustomerDetailsByCodeAsync(int code) {
            return base.Channel.getCustomerDetailsByCodeAsync(code);
        }
        
        public MyProject3.ServiceReference1.Orders getOrderByCode(int v) {
            return base.Channel.getOrderByCode(v);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders> getOrderByCodeAsync(int v) {
            return base.Channel.getOrderByCodeAsync(v);
        }
        
        public int AddCust(MyProject3.ServiceReference1.CustomerDetails c) {
            return base.Channel.AddCust(c);
        }
        
        public System.Threading.Tasks.Task<int> AddCustAsync(MyProject3.ServiceReference1.CustomerDetails c) {
            return base.Channel.AddCustAsync(c);
        }
        
        public int GetCodeToCustomersD() {
            return base.Channel.GetCodeToCustomersD();
        }
        
        public System.Threading.Tasks.Task<int> GetCodeToCustomersDAsync() {
            return base.Channel.GetCodeToCustomersDAsync();
        }
        
        public int IsExist(string n) {
            return base.Channel.IsExist(n);
        }
        
        public System.Threading.Tasks.Task<int> IsExistAsync(string n) {
            return base.Channel.IsExistAsync(n);
        }
        
        public MyProject3.ServiceReference1.Customers[] GetAllCustomersByCustName(string n) {
            return base.Channel.GetAllCustomersByCustName(n);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Customers[]> GetAllCustomersByCustNameAsync(string n) {
            return base.Channel.GetAllCustomersByCustNameAsync(n);
        }
        
        public MyProject3.ServiceReference1.Orders[] GetOrderListByCustomer(int cd) {
            return base.Channel.GetOrderListByCustomer(cd);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference1.Orders[]> GetOrderListByCustomerAsync(int cd) {
            return base.Channel.GetOrderListByCustomerAsync(cd);
        }
        
        public int AddOrder(MyProject3.ServiceReference1.Orders order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderAsync(MyProject3.ServiceReference1.Orders order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public int GetCodeToOrder() {
            return base.Channel.GetCodeToOrder();
        }
        
        public System.Threading.Tasks.Task<int> GetCodeToOrderAsync() {
            return base.Channel.GetCodeToOrderAsync();
        }
    }
}
