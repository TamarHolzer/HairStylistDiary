//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyProject3.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference2.Cities))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MyProject3.ServiceReference2.Sale))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cities", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Cities : MyProject3.ServiceReference2.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameCityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeCity {
            get {
                return this.CodeCityField;
            }
            set {
                if ((this.CodeCityField.Equals(value) != true)) {
                    this.CodeCityField = value;
                    this.RaisePropertyChanged("CodeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameCity {
            get {
                return this.NameCityField;
            }
            set {
                if ((object.ReferenceEquals(this.NameCityField, value) != true)) {
                    this.NameCityField = value;
                    this.RaisePropertyChanged("NameCity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sale", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Sale : MyProject3.ServiceReference2.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TheSaleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeSale {
            get {
                return this.CodeSaleField;
            }
            set {
                if ((this.CodeSaleField.Equals(value) != true)) {
                    this.CodeSaleField = value;
                    this.RaisePropertyChanged("CodeSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSale {
            get {
                return this.NameSaleField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSaleField, value) != true)) {
                    this.NameSaleField = value;
                    this.RaisePropertyChanged("NameSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TheSale {
            get {
                return this.TheSaleField;
            }
            set {
                if ((this.TheSaleField.Equals(value) != true)) {
                    this.TheSaleField = value;
                    this.RaisePropertyChanged("TheSale");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSaleByCode", ReplyAction="http://tempuri.org/IService1/getSaleByCodeResponse")]
        MyProject3.ServiceReference2.Sale getSaleByCode(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSaleByCode", ReplyAction="http://tempuri.org/IService1/getSaleByCodeResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference2.Sale> getSaleByCodeAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllCities", ReplyAction="http://tempuri.org/IService1/getAllCitiesResponse")]
        MyProject3.ServiceReference2.Cities[] getAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllCities", ReplyAction="http://tempuri.org/IService1/getAllCitiesResponse")]
        System.Threading.Tasks.Task<MyProject3.ServiceReference2.Cities[]> getAllCitiesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MyProject3.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MyProject3.ServiceReference2.IService1>, MyProject3.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyProject3.ServiceReference2.Sale getSaleByCode(int value) {
            return base.Channel.getSaleByCode(value);
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference2.Sale> getSaleByCodeAsync(int value) {
            return base.Channel.getSaleByCodeAsync(value);
        }
        
        public MyProject3.ServiceReference2.Cities[] getAllCities() {
            return base.Channel.getAllCities();
        }
        
        public System.Threading.Tasks.Task<MyProject3.ServiceReference2.Cities[]> getAllCitiesAsync() {
            return base.Channel.getAllCitiesAsync();
        }
    }
}
